name: Deploy Lambda Function
on: [push]

jobs:

  lint:
    runs-on: ubuntu-latest
    steps: 
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install libraries
        run: pip install flake8
      - name: Lint with flake8
        run: |
            cd function
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install libraries
        run: |
            cd function
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt -t .; fi 
      - name: Zip bundle
        run: |
            cd function
            zip -r ../${{ github.sha }}.zip .
      - name: Archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: zipped-bundle
          path: ${{ github.sha }}.zip
  publish:
    runs-on: ubuntu-latest
    needs: build
    steps: 
      - name: Create release
        id: create-release
        uses: actions/create-release@v1  # This action is archived
        env: 
          # How the runner authenticate with the github api to create the release
          GITHUB_TOKEN: ${{ secrets.github_token }} 
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release from ${{ github.run_number }}
          body: New release for ${{ github.sha }}. Release notes on the documentation site
          draft: false
          prerelease: false
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: zipped-bundle
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env: 
          # How the runner authenticate with the github api to create the release
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          # This gets the url created when creating the release
          # The ID create-release is what makes this work with the variable under
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ github.sha }}.zip  # Where in the runner the asset is now
          # Name to appear on the release page
          # Needs explain what is in the release and is not specific to the run
          asset_name: source_code_with_libraries.zip 
          # They type of the asset, which is a zip file
          # Could have been other libraries like container images
          asset_content_type: application/zip  
        
        
